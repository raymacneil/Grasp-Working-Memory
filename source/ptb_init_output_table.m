function out = ptb_init_output_table(out_path, exp_name, part_dems, config_dat)
%INITOUTPUTTABLE Summary of this function goes here
%   Detailed explanation goes here
% Participant data output path

out = struct();

pid = part_dems.id;

% Participant data output path
out.part_out_path = [out_path pid '/' exp_name '_' part_dems.config_name '_' part_dems.task '/'];

if ~(exist(out.part_out_path, 'dir')> 1) 
    mkdir(out.part_out_path);
end

% Parse and count the total number of trials specified
out.pid = pid;
out.out_path = out_path;
blockNums = unique(config_dat.block_num);
out.nBlocks = length(blockNums);
nTrialsPerBlock = zeros(out.nBlocks,1);
for nb=1:out.nBlocks
    nTrialsPerBlock(nb) = sum(config_dat.block_num == blockNums(nb));
end
out.nTrials = nTrialsPerBlock;
out.tot_nTrials = sum(out.nTrials);

% Initialize output table
out.data_columns = {'participant',...
                    'BlockNum',...
                    'PracticeBlock',...
                    'PracticeSkipped',...
                    'TrialNum',...
                    'BadTrial',...
                    'TrialRepeat',...
                    'BarAngle',...
                    'BarLength',...
                    'Collision',...
                    'ReachVelocity',...
                    'ReturnVelocity',...
                    'TrialStartTime',...
                    'ReachTime',...
                    'ReturnTime',...
                    'wmModality'...
                    'wmRespDigits',...
                    'wmRespMotor',...
                    'wmStimID',...
                    'wmRefStimID',...
                    'wmCorrect',...
                    'wmNBack',...
                    'wmInputRT',...
                    'wmStimFrames',...
                    'wmSOA',...
                    'wmStimPos',...
                    'wmTaskIsDual'};
 
out.pData = cell2table(cell(out.tot_nTrials, length(out.data_columns)),...
                      'VariableNames',out.data_columns);

% Preallocate blank data row to expand data output if necessary
out.blank_data_row = array2table(nan(1,length(out.data_columns)),...
                    'VariableNames',out.pData.Properties.VariableNames);
                
% Counter for correct row indexing when writing output
out.row_ct = 1;

% Set output file name
% [~, cond_fname] = fileparts(part_dems.cond_file); 
% cond_fname_split = strsplit(cond_fname, '_');
% cond_name = [cond_fname_split{end-1} '_' cond_fname_split{end}];
% out.cond_name = cond_name;
out.part_data_fname = [out.part_out_path  ...
                       out.pid '_' part_dems.config_name '_results_out.csv'];
if ~exist(out.part_data_fname, 'file')
    fid = fopen( out.part_data_fname, 'wt+' );
    if fid>0
        fprintf(fid,strjoin(out.data_columns,','));
        fprintf(fid,'\n');
        fclose(fid);
    end
end

end

